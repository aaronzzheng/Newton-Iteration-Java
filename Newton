import components.simplereader.SimpleReader;
import components.simplereader.SimpleReader1L;
import components.simplewriter.SimpleWriter;
import components.simplewriter.SimpleWriter1L;

/**
 * Put a short phrase describing the program here.
 *
 * @author Aaron Zheng
 *
 */
public final class Newton4 {

    /**
     * No argument constructor--private to prevent instantiation.
     */
    private Newton4() {
    }

    /**
     * Computes estimate of square root of x to within relative error 0.01%.
     *
     * @param x
     *            positive number to compute square root of
     *
     * @param epsilon
     *            epsilon provided by user
     * @return estimate of square root
     */
    private static double sqrt(double x, double epsilon) {
        double r = x;

        // Calculate the absolute difference between r*r and x
        double y = ((r * r) - x);

        // Ensure y is positive
        if (y < 0) {
            y = -y;
        }

        // Handle zero case to avoid division by zero
        double div;
        if (x == 0) {
            div = 0;
        } else {
            // Use multiplicative inverse to avoid division
            div = 1 / x;
        }

        // Iteratively improve the estimate until the relative error is within epsilon
        while (y * div > epsilon * epsilon) {
            // Update estimate using Newton's method
            r = (r + (x / r)) / 2;
            y = (r * r) - x;

            // Ensure y is positive
            if (y < 0) {
                y = -y;
            }

        }

        return r;
    }

    /**
     * Main method.
     *
     * @param args
     *            the command line arguments
     */
    public static void main(String[] args) {
        SimpleReader in = new SimpleReader1L();
        SimpleWriter out = new SimpleWriter1L();

        // Prompt the user for the epsilon value
        out.println(
                "Enter a value of epsilon please (A really really small number): ");
        Double epsilon = in.nextDouble();

        // Prompt for the first number
        out.println(
                "Enter a positive number or enter negative number to quit: ");
        double number = in.nextDouble();

        // Process each number until a negative number is entered
        while (number > 0.0) {

            // Compute and display the square root
            double answer = sqrt(number, epsilon);
            out.println("The square root is: " + answer);

            // Prompt for the next number
            out.println(
                    "Enter a positive number or enter negative number to quit: ");
            number = in.nextDouble();

        }

        /*
         * Close input and output streams
         */
        in.close();
        out.close();
    }

}
